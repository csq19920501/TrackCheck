
//
//  ETAFNetworking.m
//  Ethome
//
//  Created by ethome on 16/8/3.
//  Copyright ¬© 2016Âπ¥ Whalefin. All rights reserved.
//

#import "ETAFNetworking.h"

@implementation ETAFNetworking

//+ (AFSecurityPolicy *)customSecurityPolicyWithGW:(BOOL)isGw
//{
//    //ÂÖàÂØºÂÖ•ËØÅ‰π¶ÔºåÊâæÂà∞ËØÅ‰π¶ÁöÑË∑ØÂæÑ
//    NSString *cerPath;
//    if (!isGw) {
//        if ([[ETAPIList getAPIList].rootUrl isEqualToString:LOCALSERVER_WANG]) {
//
//            cerPath = [[NSBundle mainBundle] pathForResource:@"localhost" ofType:@"cer"];
//
//        }else if ([[ETAPIList getAPIList].rootUrl isEqualToString:TESTSERVER]){
//
//            cerPath = [[NSBundle mainBundle] pathForResource:@"testethomecom" ofType:@"crt"];
//
//        }else{
//
//            cerPath = [[NSBundle mainBundle] pathForResource:@"yunethomecom" ofType:@"crt"];
//
//        }
//
//    }else{
//
//        cerPath = [[NSBundle mainBundle] pathForResource:@"gwserver" ofType:@"cer"];
//
//    }
//
//    NSData *certData = [NSData dataWithContentsOfFile:cerPath];
//
//    //AFSSLPinningModeCertificate ‰ΩøÁî®ËØÅ‰π¶È™åËØÅÊ®°Âºè
//    AFSecurityPolicy *securityPolicy = [AFSecurityPolicy policyWithPinningMode:AFSSLPinningModeNone];
//
//    //allowInvalidCertificates ÊòØÂê¶ÂÖÅËÆ∏Êó†ÊïàËØÅ‰π¶Ôºà‰πüÂ∞±ÊòØËá™Âª∫ÁöÑËØÅ‰π¶ÔºâÔºåÈªòËÆ§‰∏∫NO
//    //Â¶ÇÊûúÊòØÈúÄË¶ÅÈ™åËØÅËá™Âª∫ËØÅ‰π¶ÔºåÈúÄË¶ÅËÆæÁΩÆ‰∏∫YES
//    securityPolicy.allowInvalidCertificates = YES;
//
//    //validatesDomainName ÊòØÂê¶ÈúÄË¶ÅÈ™åËØÅÂüüÂêçÔºåÈªòËÆ§‰∏∫YESÔºõ
//
//    securityPolicy.validatesDomainName = NO;
//    NSSet *set = [[NSSet alloc] initWithObjects:certData, nil];
//    securityPolicy.pinnedCertificates = set;
//
//    return securityPolicy;
//}


+(void)getLMK_AFNHttpSrt:(NSString *)urlStr andTimeout:(float)time andParam:(NSDictionary *)dic success:(void (^)(id responseObject))success failure:(void (^)(NSError *error))failure WithHud:(BOOL)isHave AndTitle:(NSString *)title{
    
    dispatch_async(dispatch_get_main_queue(), ^{
        if (isHave) {
            
            if (title) {
                
                [HUD showUIBlockingIndicatorWithText:title];
            }else{
                
                [HUD showUIBlockingIndicator];
                
            }
            
        }
    });

    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
    
    session.responseSerializer = [AFHTTPResponseSerializer serializer];

    session.requestSerializer.timeoutInterval = time;
    
//    [session setSecurityPolicy:[self customSecurityPolicyWithGW:YES]];
 
    [session GET:urlStr parameters:dic headers:nil progress:^(NSProgress * _Nonnull downloadProgress) {
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        dispatch_async(dispatch_get_main_queue(), ^{
            if (isHave) {
                [HUD hideUIBlockingIndicator];
            }
        });
        
        NSDictionary *responseObjectDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSLog(@"Ëé∑ÂèñÂà∞ÁöÑÊï∞ÊçÆ%@",responseObjectDic);
        
        
        NSMutableDictionary *response = [(NSDictionary *)responseObjectDic mutableCopy];
        
        if (![responseObjectDic[@"result"] boolValue]) {
            NSString *errorCode = responseObjectDic[@"errorCode"];
            
            NSString *errorMsg = [self getErrorMsgByErrorCode:errorCode];
            
            [response setValue:errorMsg forKey:@"errorMsg"];
            
        }
        
        success(response);

    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        dispatch_async(dispatch_get_main_queue(), ^{
            [HUD hideUIBlockingIndicator];
        });
        failure(error);

    }];
    
}

+(AFHTTPSessionManager*)postLMK_AFNHttpSrt:(NSString *)urlStr parameters:(NSMutableDictionary *)parameters success:(void (^)(id responseObject))success failure:(void (^)(NSError *error))failure WithHud:(BOOL)isHave AndTitle:(NSString *)title{
    dispatch_async(dispatch_get_main_queue(), ^{
        if (isHave) {
            
            if (title) {
                
                [HUD showUIBlockingIndicatorWithText:title];
            }else{
                
                [HUD showUIBlockingIndicator];
                
            }
            
        }
    });
    
    NSLog(@"üê±Ë∞ÉÁî®‰∫Ü%@",urlStr);

    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
//    session.responseSerializer = [AFHTTPResponseSerializer serializer];
////    [session setSecurityPolicy:[self customSecurityPolicyWithGW:NO]];
//
//    if ([urlStr isEqualToString:[ETAPIList getAPIList].updateGW] || [urlStr isEqualToString:[ETAPIList getAPIList].addNvripc] || [urlStr isEqualToString:[ETAPIList getAPIList].delNvripc]) {
//
//        session.requestSerializer.timeoutInterval = 30.f;
//
//    }else if ([urlStr isEqualToString:[ETAPIList getAPIList].deviceUpdateAPI] || [ETAPIList getAPIList].addbgmusic){
//
//        session.requestSerializer.timeoutInterval = 15.f;
//
//    }else if ([urlStr isEqualToString:[ETAPIList getAPIList].changeWifiPwd] ){
//
//        session.requestSerializer.timeoutInterval = 300.f;
//
//    }
//    else{
//
//        session.requestSerializer.timeoutInterval = 8.f;
//
//    }
//    NSMutableDictionary *dic = [self rulesOfParametersWithDictionary:parameters AndUrl:urlStr];
//
//    NSLog(@"üê±ÂèÇÊï∞‰∏∫%@",dic);
//
//    [session POST:urlStr parameters:dic progress:^(NSProgress * _Nonnull uploadProgress) {
//
//    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        dispatch_async(dispatch_get_main_queue(), ^{
//            if (isHave) {
//                [HUD hideUIBlockingIndicator];
//            }
//        });
//        NSDictionary *responseObjectDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//
//        NSLog(@"%@",responseObjectDic);
//
//        NSMutableDictionary *response = [(NSDictionary *)responseObjectDic mutableCopy];
//        if (![responseObjectDic[@"processResult"] boolValue]) {
//            NSString *errorMsg = responseObjectDic[@"errorMsg"];
//            if ([errorMsg integerValue] == QUANSHI_ERROR || [errorMsg integerValue] == THIRD_ERROR  || [errorMsg integerValue] == ChangeWiFi_Error) {
//
//                [response setValue:responseObjectDic[@"resultMap"][@"content"] forKey:@"errorMsg"];
//
//            }else{
//
//                errorMsg = [self getErrorMsgByErrorCode:errorMsg];
//
//                [response setValue:errorMsg forKey:@"errorMsg"];
//            }
//
//        }
//
//        success(response);
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        dispatch_async(dispatch_get_main_queue(), ^{
//            [HUD hideUIBlockingIndicator];
//
//            kFailureAlertView;
//
//            NSLog(@"üê±ÈîôËØØ‰∏∫%@",error);
//
//        });
//        failure(error);
//    }];
    return session;
}
//putËØ∑Ê±Ç

+(void)getCSQ_AFNHttpSrt:(NSString *)urlStr andTimeout:(float)time andParam:(NSDictionary *)dic success:(void (^)(id responseObject))success failure:(void (^)(id error))failure WithHud:(BOOL)isHave AndTitle:(NSString *)title{
    
    dispatch_async(dispatch_get_main_queue(), ^{
        if (isHave) {
            
            if (title) {
                
                [HUD showUIBlockingIndicatorWithText:title];
            }else{
                
                [HUD showUIBlockingIndicator];
                
            }
            
        }
    });
    
//    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
//
//    session.responseSerializer = [AFHTTPResponseSerializer serializer];
//
//    session.requestSerializer.timeoutInterval = time;
//
////    [session setSecurityPolicy:[self customSecurityPolicyWithGW:YES]];
//    NSMutableDictionary *dict = [self rulesOfParametersWithDictionary:dic AndUrl:urlStr];
//
//    NSLog(@"üê±ÂèÇÊï∞‰∏∫%@",dict);
//    [session GET:urlStr parameters:dict headers:nil progress:^(NSProgress * _Nonnull downloadProgress) {
//
//    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//
//        dispatch_async(dispatch_get_main_queue(), ^{
//            if (isHave) {
//                [HUD hideUIBlockingIndicator];
//            }
//        });
//        NSDictionary *responseObjectDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//
//        NSLog(@"%@",responseObjectDic);
//
//        NSMutableDictionary *response = [(NSDictionary *)responseObjectDic mutableCopy];
//        if ([responseObjectDic[@"processResult"] boolValue]) {
//
//            if ([urlStr containsString:@"lifesmt"] && ![urlStr containsString:@"spot/me"]) {
//
//                NSString *content = response[@"resultMap"][@"content"];
//
//                NSData *jsonData = [content dataUsingEncoding:NSUTF8StringEncoding];
//                NSDictionary *responseJSON = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableLeaves error:nil];
//
//                success(responseJSON[@"message"]);
//
//            }else{
//
//                success(response);
//
//            }
//
//        }else{
//
//            NSString *errorMsg = responseObjectDic[@"errorMsg"];
//
//            if ([errorMsg integerValue] == QUANSHI_ERROR || [errorMsg integerValue] == THIRD_ERROR || [errorMsg integerValue] == ChangeWiFi_Error || [errorMsg integerValue] == 4192) {
//
//                [response setValue:responseObjectDic[@"resultMap"][@"content"] forKey:@"errorMsg"];
//
//                errorMsg = responseObjectDic[@"resultMap"][@"content"];
//
//            }else{
//                errorMsg = [self getErrorMsgByErrorCode:errorMsg];
//
//                [response setValue:errorMsg forKey:@"errorMsg"];
//            }
//
//            id contentArr = responseObjectDic[@"resultMap"][@"content"];
//
//            dispatch_async(dispatch_get_main_queue(), ^{
//                if ([errorMsg isEqualToString:@"ËÆæÂ§áÈáçÂ§ç"] || [errorMsg isEqualToString:@"ËÆæÂ§áÈáçÂ§ç"]) {
//
//                    [HUD showAlertWithText:[NSString stringWithFormat:@"%@%@",[contentArr componentsJoinedByString:@"-"],errorMsg]];
//
//                }else if ([errorMsg isEqualToString:@"Â∑≤Â≠òÂú®‰∏éÂÖ∂ÂÆÉËÅîÂä®‰∏≠"]){
//
//                    if ([contentArr count] == 3) {
//                        [HUD showAlertWithText:[NSString stringWithFormat:@"%@-%@Â∑≤Â≠òÂú®‰∫é(%@)ÁöÑËÅîÂä®‰∏≠",contentArr[1],contentArr[2],contentArr[0]]];
//                    }else{
//                        [HUD showAlertWithText:errorMsg];
//                    }
//
//                }else if ([errorMsg isEqualToString:@"ËÆæÂ§á‰∏çÂú®Á∫ø"]){
//
//                    if ([[contentArr class] isKindOfClass:[NSString class]]) {
//                        if ([contentArr length] > 0) {
//                            [HUD showAlertWithText:[NSString stringWithFormat:@"%@%@",contentArr,errorMsg]];
//                        }
//                    }else{
//                        [HUD showAlertWithText:errorMsg];
//                    }
//
//                }else if ([errorMsg isEqualToString:@"ËÆæÂ§áÂ∑≤Ë¢´Âà´‰∫∫Ê∑ªÂä†"]){
//                    [HUD showAlertWithText:[NSString stringWithFormat:@"ËÆæÂ§áÂ∑≤Ë¢´%@Ê∑ªÂä†",contentArr]];
//                }else if ([errorMsg isEqualToString:@"ÈïøÊúüÂØÜÁ†ÅÂ∑≤Êó†Á©∫Áº∫index"]) {
//                    [HUD showAlertWithText:@"ÈïøÊúüÂØÜÁ†ÅÁîüÊàê‰∏™Êï∞Â∑≤Ëææ‰∏äÈôê"];
//                }
//                else{
//                    if (![errorMsg isEqualToString:@"0000"]) {
//                        [HUD showAlertWithText:errorMsg];
//                    }
//                }
                
//                failure();
//
//            });
//        }
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        NSLog(@"üê±Ë∞ÉÁî®Âá∫Èîô%@",error);
//        NSString * errStr = [NSString stringWithFormat:@"ÁΩëÁªúËØ∑Ê±ÇÂ§±Ë¥•ÔºåÈîôËØØÁ†Å:%ld",(long)error.code]
//        ;
//        NSLog(@"ÁΩëÁªúËØ∑Ê±ÇÂ§±Ë¥•ÔºåÈîôËØØÁ†Å:%ld",(long)error.code);
//        dispatch_async(dispatch_get_main_queue(), ^{
//            [HUD hideUIBlockingIndicator];
//
//            [HUD showAlertWithText:errStr];
//        });
//
//        failure(errStr);
//    }];
    
}

+(void)putLMK_AFNHttpSrt:(NSString *)urlStr parameters:(id)parameters success:(void (^)(id responseObject))success failure:(void (^)(NSError *error))failure {
    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
    
    session.requestSerializer.timeoutInterval = 8.f;

//    [session PUT:urlStr parameters:parameters success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        success(responseObject);
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        failure(error);
//    }];
}
//deleteËØ∑Ê±Ç
+(void)deleteLMK_AFNHttpSrt:(NSString *)urlStr parameters:(id)parameters success:    (void (^)(id responseObject))success failure:(void (^)(NSError *error))failure {
    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
    
    session.requestSerializer.timeoutInterval = 15.f;
    
//    [session DELETE:urlStr parameters:parameters success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        success(responseObject);
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        failure(error);
//    }];
}
+ (void)setLMK_ReachabilityStatusChangeBlock:(void (^)(ReachabilityStatus status))block {
    AFNetworkReachabilityManager *mgr = [AFNetworkReachabilityManager sharedManager];
    [mgr setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        switch (status) {
            case AFNetworkReachabilityStatusReachableViaWiFi:
                block(ReachabilityStatusReachableViaWiFi);
                //                NSLog(@"WIFI");
                break;
                
            case AFNetworkReachabilityStatusReachableViaWWAN:
                block(ReachabilityStatusReachableViaWWAN);
                //                NSLog(@"Ëá™Â∏¶ÁΩëÁªú");
                break;
                
            case AFNetworkReachabilityStatusNotReachable:
                block(ReachabilityStatusNotReachable);
                //                NSLog(@"Ê≤°ÊúâÁΩëÁªú");
                break;
                
            case AFNetworkReachabilityStatusUnknown:
                block(ReachabilityStatusUnknown);
                //                NSLog(@"Êú™Áü•ÁΩëÁªú");
                break;
            default:
                break;
        }
    }];
    [mgr startMonitoring];
}



+ (NSMutableDictionary *)rulesOfParametersWithDictionary:(NSMutableDictionary *)parameters AndUrl:(NSString *)urlStr{

//    if (!parameters) {
//
//        parameters = [NSMutableDictionary dictionary];
//    }
//
//    if (![urlStr isEqualToString:[ETAPIList getAPIList].userRegistAPI] && ![urlStr isEqualToString:[ETAPIList getAPIList].userLoginAPI] && ![urlStr isEqualToString:[ETAPIList getAPIList].sendAuthCodeAPI] && ![urlStr isEqualToString:[ETAPIList getAPIList].lgrdmAPI] && ![urlStr isEqualToString:[ETAPIList getAPIList].userResetPwdAPI]) {
//
//        [parameters setObject:[GlobalKit shareKit].token?[GlobalKit shareKit].token:@"" forKey:@"token"];
//
//        [parameters setObject:[GlobalKit shareKit].passport?[GlobalKit shareKit].passport:@"" forKey:@"passport"];
//    }
//
//    if ([urlStr isEqualToString:[ETAPIList getAPIList].userRegistAPI]) {
//        [parameters setObject:APP_PID forKey:@"pid"];
//    }
//
//    [parameters setObject:APP_KEY forKey:@"appKey"];
//
//    [parameters setObject:[NSString stringWithFormat:@"%.0f",[[NSDate date] timeIntervalSince1970] * 1000] forKey:@"timestamp"];
//
//    NSMutableArray *keyValueArray = [NSMutableArray array];
//
//    NSMutableArray *keyArray = [parameters allKeys].mutableCopy;
//
//    [keyArray sortUsingSelector:@selector(compare:)];
//
//    for (NSString *key in keyArray) {
//
//        [keyValueArray addObject:[NSString stringWithFormat:@"%@=%@",key,parameters[key]]];
//
//    }
//
//    NSString *sign = [[NSString stringWithFormat:@"%@%@",[keyValueArray componentsJoinedByString:@"&"],APP_SECRET] md5Digest];
//
//    [parameters setObject:sign forKey:@"sign"];
    
    return parameters;
    
}

+ (NSString *)getErrorMsgByErrorCode:(NSString *)errorCode{
    
//    NSString *errorMsg;
//    if (![errorCode isKindOfClass:[NSNull class]]) {
//        switch ([errorCode integerValue]) {
//            case REQUEST_PARAMS_CHECK_ERROR:
//            {
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//            }
//                break;
//
//            case REQUEST_RANDOM_ERROR:
//            {
//                errorMsg = @"ÁôªÂΩïÂ§±Ë¥•";
//            }
//                break;
//            case SYSTEM_ERROR:
//            {
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//            }
//                break;
//            case NOT_LOGIN:
//            {
//
//                [[GlobalKit shareKit] clearSession];
//
//                [ETLMKSOCKETMANAGER disconnectSocket];
//
//                [APP_DEV_MANAGER allDeviceLoginout];
//
//                UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
//                ETLoginNavViewController *loginVC = [storyboard instantiateViewControllerWithIdentifier:@"ETLoginNavController"];
//
//                AppDelegate *delete =  (AppDelegate *)[UIApplication sharedApplication].delegate;
//                [delete.window setRootViewController:loginVC];
//                errorMsg = @"ÊÇ®Â∞öÊú™ÁôªÂΩï";
//
//            }
//
//                break;
//
//            case ACCESS_TOKEN_OVERDUE:
//
//            {
//                [[GlobalKit shareKit] clearSession];
//
//                [ETLMKSOCKETMANAGER disconnectSocket];
//
//                [APP_DEV_MANAGER allDeviceLoginout];
//
//                UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
//                ETLoginNavViewController *loginVC = [storyboard instantiateViewControllerWithIdentifier:@"ETLoginNavController"];
//
//                AppDelegate *delete =  (AppDelegate *)[UIApplication sharedApplication].delegate;
//                [delete.window setRootViewController:loginVC];
//                errorMsg = @"ÁôªÂΩïÂ∑≤Â§±Êïà";
//            }
//                break;
//            case DEVICE_QUERY_TIMEOUT:{
//
//                errorMsg = @"ËÆæÂ§áÊü•ËØ¢Â§±Ë¥•";
//
//            }
//                break;
//            case SETTING_FAIL:{
//
//                errorMsg = @"ÈÖçÁΩÆ‰∏çÊàêÂäü";
//
//            }
//                break;
//            case GW_NOT_ONLINE:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉ‰∏çÂú®Á∫ø";
//
//            }
//                break;
//            case GW_RESPONSE_TIMEOUT:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉÂìçÂ∫îË∂ÖÊó∂";
//
//            }
//                break;
//            case GW_GET_VERSION_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñÂΩìÂâçÁâàÊú¨Â§±Ë¥•";
//
//            }
//                break;
//            case GW_NOT_ADD:{
//
//                errorMsg = @"Êú™Ê∑ªÂä†Êô∫ÊÖß‰∏≠ÂøÉ";
//
//            }
//                break;
//            case GW_EXISTED:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉÂ∑≤Â≠òÂú®";
//
//            }
//                break;
//            case GW_NAME_REPEATE:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉÂêçÁß∞Â∑≤Â≠òÂú®";
//
//            }
//                break;
//            case GW_NOT_HAVE:{
//
//                errorMsg = @"ÊÇ®Êó†Ê≠§Êô∫ÊÖß‰∏≠ÂøÉ";
//
//            }
//                break;
//            case WIFI_NOT_ONLINE:{
//
//                errorMsg = @"ËÆæÂ§á‰∏çÂú®Á∫ø";
//
//            }
//                break;
//            case GW_PWD_CHECK_FAIL:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉÂØÜÁ†ÅÈ™åËØÅÂ§±Ë¥•";
//
//            }
//                break;
//            case INVALID_CMD:{
//
//                errorMsg = @"Êó†ÊïàÁöÑÊåá‰ª§";
//
//            }
//                break;
//            case DEVICE_ID_NOT_EXIST:{
//
//                errorMsg = @"ËÆæÂ§á‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case MATCH_CODE_ERROR:{
//
//                errorMsg = @"ÈÖçÂØπÁ†ÅÈîôËØØ";
//
//            }
//                break;
//
//            case MATCH_FAIL:{
//
//                errorMsg = @"ÈÖçÂØπÂ§±Ë¥•";
//
//            }
//                break;
//            case GW_DEVICE_TYPE_ERROR:{
//
//                errorMsg = @"ËÆæÂ§áÁ±ªÂûã‰∏çÂåπÈÖç";
//
//            }
//                break;
//
//            case GW_DEVICE_NOT_MATCH:{
//
//                errorMsg = @"ËÆæÂ§áÊú™ÈÖçÂØπ";
//
//            }
//                break;
//
//            case DEVICE_SET_TIMEOUT:{
//
//                errorMsg = @"ËÆæÁΩÆ‰∏çÊàêÂäü";
//
//            }
//                break;
//
//            case SET_GROUP_INFO_FAIL:{
//
//                errorMsg = @"ËÆæÁΩÆÁªÑ‰ø°ÊÅØÂ§±Ë¥•";
//
//            }
//                break;
//
//            case SET_FAN_SPEED_FAIL:{
//
//                errorMsg = @"ËØ∑Â∞ÜÁ©∫Ë∞ÉÂàáÊç¢Âà∞Âà∂ÂÜ∑ÊàñÂà∂ÁÉ≠Ê®°Âºè‰∏ãËÆæÁΩÆÈ£éÈÄü";
//
//            }
//                break;
//
//            case BIND_GW_OLD_PWD_ERROR:{
//
//                errorMsg = @"Êô∫ÊÖß‰∏≠ÂøÉÊóßÂØÜÁ†Å‰∏çÊ≠£Á°Æ";
//
//            }
//                break;
//
//            case MODIFY_GW_PWD_FAIL:{
//
//                errorMsg = @"‰øÆÊîπÊô∫ÊÖß‰∏≠ÂøÉÂØÜÁ†ÅÂ§±Ë¥•";
//
//            }
//                break;
//
//            case UP_GW_FILE_ERROR:{
//
//                errorMsg = @"Êõ¥Êñ∞Á≥ªÁªüÊñá‰ª∂ÈîôËØØ";
//
//            }
//                break;
//
//            case UP_GW_FAIL:{
//
//                errorMsg = @"Êõ¥Êñ∞Á≥ªÁªüÂ§±Ë¥•";
//
//            }
//                break;
//
//            case CREATE_VISITOR_MODE_FAIL:{
//
//                errorMsg = @"ËÆøÂÆ¢Ê®°ÂºèÂàõÂª∫Â§±Ë¥•";
//
//            }
//                break;
//
//            case GET_NETWORK_MODE_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñÁΩëÁªúÊ®°ÂºèÂ§±Ë¥•";
//
//            }
//                break;
//
//            case MODIFY_NETWORK_MODE_FAIL:{
//
//                errorMsg = @"‰øÆÊîπÁΩëÁªúÊ®°ÂºèÂ§±Ë¥•";
//
//            }
//                break;
//
//            case DEVICE_OFFLINE:{
//
//                errorMsg = @"ËÆæÂ§á‰∏çÂú®Á∫ø";
//
//            }
//                break;
//            case MODIFY_SSID_PWD_FAIL:{
//
//                errorMsg = @"‰øÆÊîπSSIDÂØÜÁ†ÅÂ§±Ë¥•";
//
//            }
//                break;
//
//
//            case GET_SSID_PWD_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñSSIDÂØÜÁ†ÅÂ§±Ë¥•";
//
//            }
//                break;
//
//
//            case GET_IP_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñIPÂú∞ÂùÄÂ§±Ë¥•";
//
//            }
//                break;
//
//            case SET_IP_FAIL:{
//
//                errorMsg = @"ËÆæÁΩÆIPÂú∞ÂùÄÂ§±Ë¥•";
//
//            }
//                break;
//
//
//            case SET_MUSIC_PARAM_INVALID:{
//
//                errorMsg = @"ËÆæÁΩÆÈü≥‰πêÂèÇÊï∞Êó†Êïà";
//
//            }
//                break;
//
//            case GET_GW_VERSION_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñÁâàÊú¨‰ø°ÊÅØÂ§±Ë¥•";
//
//            }
//                break;
//            case USERNAME_FORMAT_ERROR:{
//
//                errorMsg = @"Áî®Êà∑ÂêçÊ†ºÂºèÈîôËØØ";
//
//            }
//                break;
//            case USER_PWD_FORMAT_ERROR:{
//
//                errorMsg = @"ÂØÜÁ†ÅÊ†ºÂºèÈîôËØØ";
//
//            }
//                break;
//            case USER_OLD_PWD_FORMAT_ERROR:{
//
//                errorMsg = @"ÊóßÂØÜÁ†ÅÊ†ºÂºèÈîôËØØ";
//
//            }
//                break;
//            case USER_OLD_PWD_ERROR:{
//
//                errorMsg = @"ÊóßÂØÜÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case NEW_OLD_PWD_SAME:{
//
//                errorMsg = @"Êñ∞ÊóßÂØÜÁ†ÅÁõ∏Âêå";
//
//            }
//                break;
//            case MOBILE_PHONE_IS_EMPTY:{
//
//                errorMsg = @"ÊâãÊú∫Âè∑‰∏∫Á©∫";
//
//            }
//                break;
//            case USER_REGISTED:{
//
//                errorMsg = @"ËØ•Áî®Êà∑Â∑≤Ê≥®ÂÜå";
//
//            }
//                break;
//            case USER_NOT_REGIST:{
//
//                errorMsg = @"ËØ•Áî®Êà∑Êú™Ê≥®ÂÜå";
//
//            }
//                break;
//            case SEND_CHECK_CODE_TYPE_ERROR:{
//
//                errorMsg = @"Ëé∑ÂèñÈ™åËØÅÁ†ÅÁ±ªÂûãÈîôËØØ";
//
//            }
//                break;
//            case SEND_CHECK_CODE_IS_EMPTY:{
//
//                errorMsg = @"È™åËØÅÁ†Å‰∏∫Á©∫";
//
//            }
//                break;
//            case SEND_CHECK_CODE_ERROR:{
//
//                errorMsg = @"È™åËØÅÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case USER_NAME_PWD_ERROR:{
//
//                errorMsg = @"Áî®Êà∑ÂêçÂØÜÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case USER_PWD_ERROR:{
//
//                errorMsg = @"Áî®Êà∑ÂØÜÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case MOBILE_PHONE_ERROR:{
//
//                errorMsg = @"ÊâãÊú∫Âè∑ÈîôËØØ";
//
//            }
//                break;
//            case USER_NOT_EXIST:{
//
//                errorMsg = @"Áî®Êà∑‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case MESSAGE_NOT_EXIST:{
//
//                errorMsg = @"Êó†Ê≠§Ê∂àÊÅØ";
//
//            }
//                break;
//            case SMS_SEND_FAIL:{
//
//                errorMsg = @"Áü≠‰ø°ÂèëÈÄÅÂ§±Ë¥•";
//
//            }
//                break;
//            case MESSAGE_HANDLED:{
//
//                errorMsg = @"Ê∂àÊÅØÂ∑≤Â§ÑÁêÜ";
//
//            }
//                break;
//            case DEVICE_TYPE_ERROR:{
//
//                errorMsg = @"ËÆæÂ§áÁ±ªÂûãÈîôËØØ";
//
//            }
//                break;
//            case DEVICE_NOT_EXIST:{
//
//                errorMsg = @"ËÆæÂ§á‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case DEVICE_NAME_EXIST:{
//
//                errorMsg = @"ËÆæÂ§áÂêçÁß∞Â∑≤Â≠òÂú®";
//
//            }
//                break;
//            case DEVICE_NOT_MATCH:{
//
//                errorMsg = @"Êú™ÈÖçÂØπ";
//
//            }
//                break;
//            case PARENT_DEVICE_NOT_EXIST:{
//
//                errorMsg = @"Áà∂ËÆæÂ§á‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case PARENT_DEVICE_NOT_MATCH:{
//
//                errorMsg = @"Áà∂ËÆæÂ§áÊú™ÈÖçÂØπ";
//
//            }
//                break;
//            case DEVICE_DETAIL_FORMAT_ERROR:{
//
//                errorMsg = @"ËÆæÂ§áËØ¶ÊÉÖÊ†ºÂºèÈîôËØØ";
//
//            }
//                break;
//            case DEVICE_MATCHSTATUS_ERROR:{
//
//                errorMsg = @"ÈÖçÂØπÁä∂ÊÄÅÈîôËØØ";
//
//            }
//                break;
//            case NOT_HAVE_DEVICE:{
//
//                errorMsg = @"Êó†Ê≠§ËÆæÂ§á";
//
//            }
//                break;
//            case DEVICE_MATCHED:{
//
//                errorMsg = @"ËÆæÂ§áÂ∑≤ÈÖçÂØπ";
//
//            }
//                break;
//            case DEVICE_MATCH_FAIL:{
//
//                errorMsg = @"ÈÖçÂØπÂ§±Ë¥•";
//
//            }
//                break;
//            case DEVICE_STATUS_ERROR:{
//
//                errorMsg = @"ËÆæÂ§áÁä∂ÊÄÅÈîôËØØ";
//
//            }
//                break;
//            case DEVICE_PARAMS_MISSING:{
//
//                errorMsg = @"ËÆæÂ§áÂèÇÊï∞‰∏çÂÆåÊï¥";
//
//            }
//                break;
//            case DEVICE_PWD_SETED:{
//
//                errorMsg = @"ËÆæÂ§áÂØÜÁ†ÅÂ∑≤ËÆæÁΩÆ";
//
//            }
//                break;
//            case DEVICE_PWD_ERROR:{
//
//                errorMsg = @"ËÆæÂ§áÂØÜÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case SCENE_NOT_DEVICE:{
//
//                errorMsg = @"Êó†ÊÉÖÊôØËÆæÂ§á";
//
//            }
//                break;
//            case LINK_NAME_IS_EXIST:{
//
//                errorMsg = @"ËÅîÂä®ÂêçÁß∞Â∑≤Â≠òÂú®";
//
//            }
//                break;
//            case LINK_DEVICE_REPEATE:{
//
//                errorMsg = @"ËÆæÂ§áÈáçÂ§ç";
//
//            }
//                break;
//            case LINK_NOT_CONDITION:{
//
//                errorMsg = @"Êó†ËÅîÂä®Êù°‰ª∂";
//
//            }
//                break;
//            case LINK_CONDITION_ONLY_ONE:{
//
//                errorMsg = @"ËÅîÂä®Êù°‰ª∂ÂîØ‰∏Ä";
//
//            }
//                break;
//            case LINK_NOT_ACTION:{
//
//                errorMsg = @"Êó†ËÅîÂä®Ë°å‰∏∫";
//
//            }
//                break;
//            case DEVICE_EXIST_OTHER_LINK:{
//
//                errorMsg = @"Â∑≤Â≠òÂú®‰∏éÂÖ∂ÂÆÉËÅîÂä®‰∏≠";
//
//            }
//                break;
//            case NOT_LINK:{
//
//                errorMsg = @"Êó†Ê≠§ËÅîÂä®";
//
//            }
//                break;
//            case NOT_SCENE:{
//
//                errorMsg = @"Êó†Ê≠§ÊÉÖÊôØ";
//
//            }
//                break;
//            case DEVICE_EXIST_OTHER_SCENE:{
//
//                errorMsg = @"Â≠òÂú®ÂÖ∂ÂÆÉÊÉÖÊôØ‰∏≠";
//
//            }
//                break;
//            case SCENE_EXISTED:{
//
//                errorMsg = @"ÊÉÖÊôØÂêçÁß∞Â∑≤Â≠òÂú®";
//
//            }
//                break;
//            case SCENE_NOT_EXIST:{
//
//                errorMsg = @"ÊÉÖÊôØ‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case SCENE_DEVICE_REPEATE:{
//
//                errorMsg = @"ËÆæÂ§áÈáçÂ§ç";
//
//            }
//                break;
//            case SCENE_ORDER_ERROR:{
//
//                errorMsg = @"ÊÉÖÊôØÈ°∫Â∫èÈîôËØØ";
//
//            }
//                break;
//            case SCENE_START_FAIL:{
//
//                errorMsg = @"ÂºÄÂêØÊÉÖÊôØÂ§±Ë¥•";
//
//            }
//                break;
//            case INVITE_CODE_ERROR:{
//
//                errorMsg = @"ÈÇÄËØ∑Á†ÅÈîôËØØ";
//
//            }
//                break;
//            case INVITE_CODE_USED:{
//
//                errorMsg = @"ÂàÜ‰∫´Â∑≤Ëé∑Âèñ";
//
//            }
//                break;
//            case SHARE_OUT_OF_RANG:{
//
//                errorMsg = @"Ë∂ÖÂá∫ÂàÜ‰∫´Êï∞Èáè";
//
//            }
//                break;
//            case SHARE_GET_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñÂàÜ‰∫´Â§±Ë¥•";
//
//            }
//                break;
//            case NOT_SHARED_TO_USER:{
//
//                errorMsg = @"Êú™ÂàÜ‰∫´ÁªôÊ≠§Áî®Êà∑";
//
//            }
//                break;
//            case NOT_HAVE_ROOM:{
//
//                errorMsg = @"Êó†Ê≠§ÊàøÈó¥";
//
//            }
//                break;
//            case ROOM_DETAIL_FORMAT_ERROR:{
//
//                errorMsg = @"ÊàøÈó¥‰ø°ÊÅØÈîôËØØ";
//
//            }
//                break;
//            case ROOM_EXISTED:{
//
//                errorMsg = @"ÊàøÈó¥Â∑≤Â≠òÂú®";
//
//            }
//                break;
//            case ROOM_NAME_REPEATE:{
//
//                errorMsg = @"ÊàøÈó¥ÂêçÈáçÂ§ç";
//
//            }
//                break;
//            case ROOM_ORDER_ERROR:{
//
//                errorMsg = @"ÊàøÈó¥È°∫Â∫èÈîôËØØ";
//
//            }
//                break;
//            case TIMING_NOT_EXIST:{
//
//                errorMsg = @"Êó†Ê≥ïÊìç‰ΩúËØ•ÂÆöÊó∂";
//
//            }
//                break;
//            case TIMING_TIME_MISSING:{
//
//                errorMsg = @"ÂÆöÊó∂Êó∂Èó¥‰∏∫Á©∫";
//
//            }
//                break;
//            case TIMING_TIME_ERROR:{
//
//                errorMsg = @"ÂÆöÊó∂Êó∂Èó¥ËÆæÁΩÆÈîôËØØ";
//
//            }
//                break;
//            case TIMING_REPEATE:{
//
//                errorMsg = @"ÂÆöÊó∂ÈáçÂ§ç";
//
//            }
//                break;
//            case TIMING_CLASH:{
//
//                errorMsg = @"ÂÆöÊó∂ÂÜ≤Á™Å";
//
//            }
//                break;
//            case OUT_OF_RANG:{
//
//                errorMsg = @"ËÆæÂ§áÂÖ≥ËÅîÊï∞Ë∂ÖÂá∫ÈôêÂà∂";
//
//            }
//                break;
//            case GW_RES_HANDLE_EXCP:{
//
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//            }
//                break;
//            case DB_INSERT_RESULT_0:{
//
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//            }
//                break;
//            case DB_UPDATE_RESULT_0:{
//
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//            }
//                break;
//            case DB_GET_SEQ_NEXT_VALUE_ERROR:{
//
//                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//            }
//                break;
//            case HK_GET_ACCESS_TOKEN_FAIL:{
//
//                errorMsg = @"Ëé∑ÂèñËÆøÈóÆÊµ∑Â∫∑ËÆæÂ§átokenÂ§±Ë¥•";
//
//            }
//                break;
//            case VERSION_IS_OUTTIME:{
//
//                errorMsg = @"ÂçáÁ∫ßË∂ÖÊó∂";
//
//            }
//                break;
//            case VERSION_IS_UPDATING:{
//
//                errorMsg = @"Ê≠£Âú®ÂçáÁ∫ß‰∏≠";
//
//            }
//                break;
//            case VERSION_IS_CANUPDATE:{
//
//                errorMsg = @"ÊúâÂèØÂçáÁ∫ßÁâàÊú¨";
//
//            }
//                break;
//
//            case WIFI_TIMEOUT:{
//
//                errorMsg = @"ËÆæÂ§áÂìçÂ∫îË∂ÖÊó∂";
//
//            }
//                break;
//
//            case SWITCH_INSCENE:{
//
//                errorMsg = @"ÂºÄÂÖ≥Â∑≤Âú®Ëá™Â∑±Êàñ‰ªñ‰∫∫ÊÉÖÊôØ‰∏≠";
//
//            }
//                break;
//            case SWITCH_INMANYLINK:{
//
//                errorMsg = @"ÂºÄÂÖ≥Â∑≤Âú®Â§öËÅî‰∏≠";
//
//            }
//                break;
//            case SWITCH_INLINK:{
//
//                errorMsg = @"ÂºÄÂÖ≥Â∑≤Âú®Ëá™Â∑±Êàñ‰ªñ‰∫∫ËÅîÂä®‰∏≠";
//
//            }
//                break;
//
//            case SCENESWITCH_EXIT:{
//
//                errorMsg = @"ÂºÄÂÖ≥Â∑≤ËÆæÁΩÆ‰∏∫ÊÉÖÊôØÂºÄÂÖ≥,Êó†Ê≥ïËÆæÁΩÆ";
//
//            }
//                break;
//
//            case SCENESWITCH_NOT_EXIT:{
//
//                errorMsg = @"ÊÉÖÊôØÂºÄÂÖ≥‰∏çÂ≠òÂú®";
//
//            }
//                break;
//            case SCENEPWD_ERROR:{
//
//                errorMsg = @"ÊÉÖÊôØÂØÜÁ†ÅÈîôËØØ";
//
//            }
//                break;
//            case SCENEPWD_EXIT:{
//
//                errorMsg = @"ÊÉÖÊôØÂØÜÁ†ÅÂ∑≤ËÆæÁΩÆ";
//
//            }
//                break;
//
//            case DEVIEC_OTHER_ADD:{
//
//                errorMsg = @"ËÆæÂ§áÂ∑≤Ë¢´Âà´‰∫∫Ê∑ªÂä†";
//
//            }
//                break;
//
//            case SCENEDEFAULT_NOT_DEL:{
//
//                errorMsg = @"ÈªòËÆ§ÊÉÖÊôØ‰∏çÂÖÅËÆ∏Âà†Èô§";
//
//            }
//                break;
//
//            case SUCCESS:{
//
//                errorMsg = @"0000";
//
//            }
//                break;
//            case 4192:{
//
//                errorMsg = @"Êåá‰ª§Êú™ÊâßË°å";
//
//            }
//                break;
//            default:{
//
////                errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//                errorMsg =  [NSString stringWithFormat:@"ËØ∑Ê±ÇÂ§±Ë¥•Ôºö%@",errorMsg];
//
//            }
//                break;
//        }
//
//    }else{
//
//        errorMsg = @"ÁΩëÁªú‰∏çÁªôÂäõ";
//
//    }

    
    return nil;
    
}

+(void)postLMK_AFNHttpSrt:(NSString *)urlStr parameters:(NSMutableDictionary *)parameters success:(void (^)(id responseObject))success failure:(void (^)(NSError *error))failure{

//
//    AFHTTPSessionManager *session = [AFHTTPSessionManager manager];
//    session.responseSerializer = [AFHTTPResponseSerializer serializer];
//    session.requestSerializer.timeoutInterval = 8.f;
//
//    [session POST:urlStr parameters:parameters progress:^(NSProgress * _Nonnull uploadProgress) {
//
//    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSDictionary *responseObjectDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSLog(@"%@",responseObjectDic);
//
//        NSMutableDictionary *response = [(NSDictionary *)responseObjectDic mutableCopy];
//        if (![responseObjectDic[@"processResult"] boolValue]) {
//            NSString *errorMsg = responseObjectDic[@"errorMsg"];
//
//            errorMsg = [self getErrorMsgByErrorCode:errorMsg];
//
//            [response setValue:errorMsg forKey:@"errorMsg"];
//        }
//
//        success(response);
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        failure(error);
//
//    }];
    
}


@end
